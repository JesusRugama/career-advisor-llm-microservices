apiVersion: apps/v1
kind: Deployment
metadata:
  name: prompts-service
  namespace: career-advisor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prompts-service
  template:
    metadata:
      labels:
        app: prompts-service
    spec:
      initContainers:
      - name: wait-for-postgres
        image: postgres:15-alpine
        command: ['sh', '-c']
        args:
        - |
          until pg_isready -h postgres-service -p 5432 -U postgres; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
          echo "PostgreSQL is ready!"
        env:
        - name: PGPASSWORD
          value: "postgres"
      containers:
      - name: prompts-service
        image: career-advisor/prompts-service:latest
        imagePullPolicy: Never  # For local development
        ports:
        - containerPort: 8000
        envFrom:
        - configMapRef:
            name: career-advisor-config
        env:
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: career-advisor-config
              key: DATABASE_URL
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: prompts-service
  namespace: career-advisor
spec:
  selector:
    app: prompts-service
  ports:
    - port: 8000
      targetPort: 8000
  type: ClusterIP
