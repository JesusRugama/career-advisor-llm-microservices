version: '3.8'

services:
  # PostgreSQL database for development
  postgres:
    image: pgvector/pgvector:pg15
    environment:
      POSTGRES_DB: career_advisor
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Gateway - Nginx reverse proxy on port 8000
  nginx:
    image: nginx:alpine
    ports:
      - "8000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - users-service
      - conversations-service
      - messages-service
      - prompts-service
      - llm-service
    restart: unless-stopped

  # Users Service
  users-service:
    build:
      context: ../
      dockerfile: microservices/services/users-service/Dockerfile
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/career_advisor
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    volumes:
      - ./services/users-service/src:/app/microservices/services/users-service/src
      - ./shared:/app/microservices/shared
    depends_on:
      postgres:
        condition: service_healthy
    tty: true
    stdin_open: true

  # Conversations Service
  conversations-service:
    build:
      context: ../
      dockerfile: microservices/services/conversations-service/Dockerfile
    ports:
      - "8002:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/career_advisor
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    volumes:
      - ./services/conversations-service/src:/app/microservices/services/conversations-service/src
      - ./shared:/app/microservices/shared
    depends_on:
      postgres:
        condition: service_healthy
    tty: true
    stdin_open: true

  # Messages Service
  messages-service:
    build:
      context: ../
      dockerfile: microservices/services/messages-service/Dockerfile
    ports:
      - "8003:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/career_advisor
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    volumes:
      - ./services/messages-service/src:/app/microservices/services/messages-service/src
      - ./shared:/app/microservices/shared
    depends_on:
      postgres:
        condition: service_healthy
    tty: true
    stdin_open: true

  # Prompts Service
  prompts-service:
    build:
      context: ../
      dockerfile: microservices/services/prompts-service/Dockerfile
    ports:
      - "8004:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/career_advisor
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    volumes:
      - ./services/prompts-service/src:/app/microservices/services/prompts-service/src
      - ./shared:/app/microservices/shared
    depends_on:
      postgres:
        condition: service_healthy
    tty: true
    stdin_open: true

  # AI Service
  llm-service:
    build:
      context: ../
      dockerfile: microservices/services/llm-service/Dockerfile
    ports:
      - "8005:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/career_advisor
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    volumes:
      - ./services/llm-service/src:/app/microservices/services/llm-service/src
      - ./shared:/app/microservices/shared
    depends_on:
      postgres:
        condition: service_healthy
    tty: true
    stdin_open: true

volumes:
  postgres_dev_data:
